apiVersion: v1
kind: Namespace
metadata:
  name: llm-enterprise
  labels:
    name: llm-enterprise
    environment: production
    compliance: high
    app.kubernetes.io/name: llm-enterprise
    app.kubernetes.io/part-of: llm-processing-system
---
apiVersion: v1
kind: ResourceQuota
metadata:
  name: llm-enterprise-quota
  namespace: llm-enterprise
spec:
  hard:
    requests.cpu: "32"
    requests.memory: 64Gi
    limits.cpu: "64"
    limits.memory: 128Gi
    requests.storage: 1Ti
    persistentvolumeclaims: "50"
    pods: "100"
    services: "50"
    secrets: "100"
    configmaps: "100"
---
apiVersion: v1
kind: LimitRange
metadata:
  name: llm-enterprise-limits
  namespace: llm-enterprise
spec:
  limits:
  - type: Container
    default:
      cpu: 500m
      memory: 512Mi
    defaultRequest:
      cpu: 250m
      memory: 256Mi
    min:
      cpu: 100m
      memory: 128Mi
    max:
      cpu: 4
      memory: 8Gi
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: llm-enterprise-network-policy
  namespace: llm-enterprise
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    ports:
    - protocol: TCP
      port: 80
    - protocol: TCP
      port: 443
  egress:
  - to:
    - namespaceSelector: {}
    ports:
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: 80
    - protocol: TCP
      port: 5432
    - protocol: TCP
      port: 6379
---
apiVersion: policy/v1
kind: PodSecurityPolicy
metadata:
  name: llm-enterprise-psp
  namespace: llm-enterprise
spec:
  privileged: false
  seLinux:
    rule: RunAsAny
  runAsUser:
    rule: MustRunAsNonRoot
  fsGroup:
    rule: MustRunAs
    ranges:
    - min: 1000
      max: 2000
  supplementalGroups:
    rule: MustRunAs
    ranges:
    - min: 1000
      max: 2000
  volumes:
  - 'configMap'
  - 'emptyDir'
  - 'projected'
  - 'secret'
  - 'downwardAPI'
  - 'persistentVolumeClaim'
  allowPrivilegeEscalation: false
  hostNetwork: false
  hostIPC: false
  hostPID: false
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: llm-enterprise-sa
  namespace: llm-enterprise
  labels:
    app.kubernetes.io/name: llm-enterprise
    app.kubernetes.io/part-of: llm-processing-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: llm-enterprise-role
  namespace: llm-enterprise
rules:
- apiGroups: [""]
  resources: ["pods", "services", "configmaps", "secrets"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["apps"]
  resources: ["deployments", "statefulsets"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["batch"]
  resources: ["jobs", "cronjobs"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: llm-enterprise-rolebinding
  namespace: llm-enterprise
subjects:
- kind: ServiceAccount
  name: llm-enterprise-sa
  namespace: llm-enterprise
roleRef:
  kind: Role
  name: llm-enterprise-role
  apiGroup: rbac.authorization.k8s.io